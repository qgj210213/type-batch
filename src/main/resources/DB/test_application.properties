###########################################################
##spring datasource mysql                              ####
###########################################################
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/db_type?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.show-sql=true
# 自动检查实体和数据库表是否一致，如果不一致则会进行更新数据库表
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=MYSQL
# 显示后台处理的SQL语句
spring.jpa.show-sql=true
# 初期化springBatch Initialize a Database
spring.datasource.initialization-mode=always
##########################################################
# SPRING BATCH (BatchProperties)##########################
#batch配置                                            ####
#配置：Spring Batch在加载的时候job默认都会执行，         ####
#把spring.batch.job.enabled置为false,即把job设置成不可用, ####
#应用便会根据jobLauncher.run来执行                                                                 ####
##########################################################
# SPRING BATCH (BatchProperties)
# Database schema initialization mode.
spring.batch.initialize-schema=always
 # Execute all Spring Batch jobs in the context on startup.
# 这是因为spring batch在加载的时候job默认都会执行。解决方法：在application.properties中增加配置：
spring.batch.job.enabled=false
# Comma-separated list of job names to execute on startup (for instance,`job1,job2`). By default, all Jobs found in the context are executed.
spring.batch.job.names=
 # Path to the SQLfile to use to initialize the database schema.
spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql
# Table prefix for all the batch meta-data tables.